% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logical_estimation.R
\name{approx_or}
\alias{approx_or}
\title{Approximate a linear model for a series of logical OR statements}
\usage{
approx_or(
  means,
  covs,
  n,
  predictors,
  add_intercept = TRUE,
  verbose = FALSE,
  response_assumption = "binary",
  ...
)
}
\arguments{
\item{means}{vector of predictor and response means with the last m
means being the means of m binary responses to combine in a
logical OR statement.}

\item{covs}{a matrix of the covariance of all model predictors and the
responses with the order of rows/columns corresponding to the order of
\code{means}.}

\item{n}{sample size.}

\item{predictors}{list of objects of class \code{predictor} corresponding
to the order of the predictors in \code{means}.}

\item{add_intercept}{logical. Should the linear model add an intercept term?}

\item{verbose}{should output be printed to console?}

\item{response_assumption}{character. Either \code{"binary"} or 
\code{"continuous"}. If \code{"binary"}, specific calculations will be done
to estimate product means and variances.}

\item{...}{additional arguments}
}
\description{
\code{approx_or} approximates the linear model for a disjunction of m
  phenotypes as a function of a set of predictors.
}
\examples{
# 2 Phenotypes --------------------------------------------------------------
ex_data <- bin_data[c("g", "x", "y1", "y2")]
head(ex_data)
means <- colMeans(ex_data)
covs <- cov(ex_data)
n <- nrow(ex_data)
predictors <- list(
  new_predictor_snp(maf = mean(ex_data$g) / 2),
  new_predictor_normal(mean = mean(ex_data$x), sd = sd(ex_data$x))
)

approx_or(means = means, covs = covs, n = n, predictors = predictors,
  add_intercept = TRUE)
summary(lm(y1 | y2 ~ 1 + g + x, data = ex_data))
# 3 Phenotypes --------------------------------------------------------------
ex_data <- bin_data[c("g", "x", "y3", "y4", "y5")]
head(ex_data)
means <- colMeans(ex_data)
covs <- cov(ex_data)
n <- nrow(ex_data)
predictors <- list(
  new_predictor_snp(maf = mean(ex_data$g) / 2),
  new_predictor_normal(mean = mean(ex_data$x), sd = sd(ex_data$x))
)

approx_or(means = means, covs = covs, n = n, predictors = predictors,
  add_intercept = TRUE)
summary(lm(y3 | y4 | y5 ~ 1 + g + x, data = ex_data))

}
